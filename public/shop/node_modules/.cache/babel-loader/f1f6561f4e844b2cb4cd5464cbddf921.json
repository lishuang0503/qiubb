{"remainingRequest":"/opt/homebrew/var/www/qiubb/public/shop/node_modules/babel-loader/lib/index.js!/opt/homebrew/var/www/qiubb/public/shop/node_modules/cache-loader/dist/cjs.js??ref--0-0!/opt/homebrew/var/www/qiubb/public/shop/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/homebrew/var/www/qiubb/public/shop/src/views/excel/merge-header.vue?vue&type=script&lang=js&","dependencies":[{"path":"/opt/homebrew/var/www/qiubb/public/shop/src/views/excel/merge-header.vue","mtime":1675670440411},{"path":"/opt/homebrew/var/www/qiubb/public/shop/babel.config.js","mtime":1675670440385},{"path":"/opt/homebrew/var/www/qiubb/public/shop/node_modules/cache-loader/dist/cjs.js","mtime":1675670541337},{"path":"/opt/homebrew/var/www/qiubb/public/shop/node_modules/babel-loader/lib/index.js","mtime":1675670543334},{"path":"/opt/homebrew/var/www/qiubb/public/shop/node_modules/cache-loader/dist/cjs.js","mtime":1675670541337},{"path":"/opt/homebrew/var/www/qiubb/public/shop/node_modules/vue-loader/lib/index.js","mtime":1675670542371}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIGZyb20gIi9vcHQvaG9tZWJyZXcvdmFyL3d3dy9xaXViYi9wdWJsaWMvc2hvcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW50ZXJvcFJlcXVpcmVXaWxkY2FyZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGZldGNoTGlzdCB9IGZyb20gJ0AvYXBpL2FydGljbGUnOwppbXBvcnQgeyBwYXJzZVRpbWUgfSBmcm9tICdAL3V0aWxzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdNZXJnZUhlYWRlcicsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxpc3Q6IG51bGwsCiAgICAgIGxpc3RMb2FkaW5nOiB0cnVlLAogICAgICBkb3dubG9hZExvYWRpbmc6IGZhbHNlCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZmV0Y2hEYXRhKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBmZXRjaERhdGE6IGZ1bmN0aW9uIGZldGNoRGF0YSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKICAgICAgdGhpcy5saXN0TG9hZGluZyA9IHRydWU7CiAgICAgIGZldGNoTGlzdCh0aGlzLmxpc3RRdWVyeSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpcy5saXN0ID0gcmVzcG9uc2UuZGF0YS5pdGVtczsKICAgICAgICBfdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlOwogICAgICB9KTsKICAgIH0sCiAgICBoYW5kbGVEb3dubG9hZDogZnVuY3Rpb24gaGFuZGxlRG93bmxvYWQoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwogICAgICB0aGlzLmRvd25sb2FkTG9hZGluZyA9IHRydWU7CiAgICAgIFByb21pc2UucmVzb2x2ZSgpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKCdAL3ZlbmRvci9FeHBvcnQyRXhjZWwnKSk7CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGV4Y2VsKSB7CiAgICAgICAgdmFyIG11bHRpSGVhZGVyID0gW1snSWQnLCAnTWFpbiBJbmZvcm1hdGlvbicsICcnLCAnJywgJ0RhdGUnXV07CiAgICAgICAgdmFyIGhlYWRlciA9IFsnJywgJ1RpdGxlJywgJ0F1dGhvcicsICdSZWFkaW5ncycsICcnXTsKICAgICAgICB2YXIgZmlsdGVyVmFsID0gWydpZCcsICd0aXRsZScsICdhdXRob3InLCAncGFnZXZpZXdzJywgJ2Rpc3BsYXlfdGltZSddOwogICAgICAgIHZhciBsaXN0ID0gX3RoaXMyLmxpc3Q7CiAgICAgICAgdmFyIGRhdGEgPSBfdGhpczIuZm9ybWF0SnNvbihmaWx0ZXJWYWwsIGxpc3QpOwogICAgICAgIHZhciBtZXJnZXMgPSBbJ0ExOkEyJywgJ0IxOkQxJywgJ0UxOkUyJ107CiAgICAgICAgZXhjZWwuZXhwb3J0X2pzb25fdG9fZXhjZWwoewogICAgICAgICAgbXVsdGlIZWFkZXI6IG11bHRpSGVhZGVyLAogICAgICAgICAgaGVhZGVyOiBoZWFkZXIsCiAgICAgICAgICBtZXJnZXM6IG1lcmdlcywKICAgICAgICAgIGRhdGE6IGRhdGEKICAgICAgICB9KTsKICAgICAgICBfdGhpczIuZG93bmxvYWRMb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIGZvcm1hdEpzb246IGZ1bmN0aW9uIGZvcm1hdEpzb24oZmlsdGVyVmFsLCBqc29uRGF0YSkgewogICAgICByZXR1cm4ganNvbkRhdGEubWFwKGZ1bmN0aW9uICh2KSB7CiAgICAgICAgcmV0dXJuIGZpbHRlclZhbC5tYXAoZnVuY3Rpb24gKGopIHsKICAgICAgICAgIGlmIChqID09PSAndGltZXN0YW1wJykgewogICAgICAgICAgICByZXR1cm4gcGFyc2VUaW1lKHZbal0pOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuIHZbal07CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;AACA;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;EACA;EACAC;IACAC;MAAA;MACA;MACAC;QACA;QACA;MACA;IACA;IACAC;MAAA;MACA;MACA;QAAA;MAAA;QACA;QACA;QACA;QACA;QACA;QACA;QACAC;UACAC;UACAC;UACAC;UACAZ;QACA;QACA;MACA;IACA;IACAa;MACA;QAAA;UACA;YACA;UACA;YACA;UACA;QACA;MAAA;IACA;EACA;AACA","names":["name","data","list","listLoading","downloadLoading","created","methods","fetchData","fetchList","handleDownload","excel","multiHeader","header","merges","formatJson"],"sourceRoot":"src/views/excel","sources":["merge-header.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n\n    <el-button :loading=\"downloadLoading\" style=\"margin-bottom:20px\" type=\"primary\" icon=\"el-icon-document\" @click=\"handleDownload\">Export</el-button>\n\n    <el-table\n      ref=\"multipleTable\"\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      element-loading-text=\"Loading\"\n      border\n      fit\n      highlight-current-row\n    >\n      <el-table-column align=\"center\" label=\"Id\" width=\"95\">\n        <template slot-scope=\"scope\">\n          {{ scope.$index }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Main Information\" align=\"center\">\n        <el-table-column label=\"Title\">\n          <template slot-scope=\"scope\">\n            {{ scope.row.title }}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Author\" width=\"110\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <el-tag>{{ scope.row.author }}</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Readings\" width=\"115\" align=\"center\">\n          <template slot-scope=\"scope\">\n            {{ scope.row.pageviews }}\n          </template>\n        </el-table-column>\n      </el-table-column>\n      <el-table-column align=\"center\" label=\"Date\" width=\"220\">\n        <template slot-scope=\"scope\">\n          <i class=\"el-icon-time\" />\n          <span>{{ scope.row.timestamp | parseTime('{y}-{m}-{d} {h}:{i}') }}</span>\n        </template>\n      </el-table-column>\n    </el-table>\n\n  </div>\n</template>\n\n<script>\nimport { fetchList } from '@/api/article'\nimport { parseTime } from '@/utils'\n\nexport default {\n  name: 'MergeHeader',\n  data() {\n    return {\n      list: null,\n      listLoading: true,\n      downloadLoading: false\n    }\n  },\n  created() {\n    this.fetchData()\n  },\n  methods: {\n    fetchData() {\n      this.listLoading = true\n      fetchList(this.listQuery).then(response => {\n        this.list = response.data.items\n        this.listLoading = false\n      })\n    },\n    handleDownload() {\n      this.downloadLoading = true\n      import('@/vendor/Export2Excel').then(excel => {\n        const multiHeader = [['Id', 'Main Information', '', '', 'Date']]\n        const header = ['', 'Title', 'Author', 'Readings', '']\n        const filterVal = ['id', 'title', 'author', 'pageviews', 'display_time']\n        const list = this.list\n        const data = this.formatJson(filterVal, list)\n        const merges = ['A1:A2', 'B1:D1', 'E1:E2']\n        excel.export_json_to_excel({\n          multiHeader,\n          header,\n          merges,\n          data\n        })\n        this.downloadLoading = false\n      })\n    },\n    formatJson(filterVal, jsonData) {\n      return jsonData.map(v => filterVal.map(j => {\n        if (j === 'timestamp') {\n          return parseTime(v[j])\n        } else {\n          return v[j]\n        }\n      }))\n    }\n  }\n}\n</script>\n"]}]}