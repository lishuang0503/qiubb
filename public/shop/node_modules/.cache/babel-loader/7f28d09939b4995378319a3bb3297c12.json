{"remainingRequest":"/opt/homebrew/var/www/qiubb/public/shop/node_modules/babel-loader/lib/index.js!/opt/homebrew/var/www/qiubb/public/shop/node_modules/cache-loader/dist/cjs.js??ref--0-0!/opt/homebrew/var/www/qiubb/public/shop/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/homebrew/var/www/qiubb/public/shop/src/views/excel/export-excel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/opt/homebrew/var/www/qiubb/public/shop/src/views/excel/export-excel.vue","mtime":1675670440411},{"path":"/opt/homebrew/var/www/qiubb/public/shop/babel.config.js","mtime":1675670440385},{"path":"/opt/homebrew/var/www/qiubb/public/shop/node_modules/cache-loader/dist/cjs.js","mtime":1675670541337},{"path":"/opt/homebrew/var/www/qiubb/public/shop/node_modules/babel-loader/lib/index.js","mtime":1675670543334},{"path":"/opt/homebrew/var/www/qiubb/public/shop/node_modules/cache-loader/dist/cjs.js","mtime":1675670541337},{"path":"/opt/homebrew/var/www/qiubb/public/shop/node_modules/vue-loader/lib/index.js","mtime":1675670542371}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIGZyb20gIi9vcHQvaG9tZWJyZXcvdmFyL3d3dy9xaXViYi9wdWJsaWMvc2hvcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW50ZXJvcFJlcXVpcmVXaWxkY2FyZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGZldGNoTGlzdCB9IGZyb20gJ0AvYXBpL2FydGljbGUnOwppbXBvcnQgeyBwYXJzZVRpbWUgfSBmcm9tICdAL3V0aWxzJzsKLy8gb3B0aW9ucyBjb21wb25lbnRzCmltcG9ydCBGaWxlbmFtZU9wdGlvbiBmcm9tICcuL2NvbXBvbmVudHMvRmlsZW5hbWVPcHRpb24nOwppbXBvcnQgQXV0b1dpZHRoT3B0aW9uIGZyb20gJy4vY29tcG9uZW50cy9BdXRvV2lkdGhPcHRpb24nOwppbXBvcnQgQm9va1R5cGVPcHRpb24gZnJvbSAnLi9jb21wb25lbnRzL0Jvb2tUeXBlT3B0aW9uJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdFeHBvcnRFeGNlbCcsCiAgY29tcG9uZW50czogewogICAgRmlsZW5hbWVPcHRpb246IEZpbGVuYW1lT3B0aW9uLAogICAgQXV0b1dpZHRoT3B0aW9uOiBBdXRvV2lkdGhPcHRpb24sCiAgICBCb29rVHlwZU9wdGlvbjogQm9va1R5cGVPcHRpb24KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsaXN0OiBudWxsLAogICAgICBsaXN0TG9hZGluZzogdHJ1ZSwKICAgICAgZG93bmxvYWRMb2FkaW5nOiBmYWxzZSwKICAgICAgZmlsZW5hbWU6ICcnLAogICAgICBhdXRvV2lkdGg6IHRydWUsCiAgICAgIGJvb2tUeXBlOiAneGxzeCcKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5mZXRjaERhdGEoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGZldGNoRGF0YTogZnVuY3Rpb24gZmV0Y2hEYXRhKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwogICAgICB0aGlzLmxpc3RMb2FkaW5nID0gdHJ1ZTsKICAgICAgZmV0Y2hMaXN0KCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpcy5saXN0ID0gcmVzcG9uc2UuZGF0YS5pdGVtczsKICAgICAgICBfdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlOwogICAgICB9KTsKICAgIH0sCiAgICBoYW5kbGVEb3dubG9hZDogZnVuY3Rpb24gaGFuZGxlRG93bmxvYWQoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwogICAgICB0aGlzLmRvd25sb2FkTG9hZGluZyA9IHRydWU7CiAgICAgIFByb21pc2UucmVzb2x2ZSgpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKCdAL3ZlbmRvci9FeHBvcnQyRXhjZWwnKSk7CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGV4Y2VsKSB7CiAgICAgICAgdmFyIHRIZWFkZXIgPSBbJ0lkJywgJ1RpdGxlJywgJ0F1dGhvcicsICdSZWFkaW5ncycsICdEYXRlJ107CiAgICAgICAgdmFyIGZpbHRlclZhbCA9IFsnaWQnLCAndGl0bGUnLCAnYXV0aG9yJywgJ3BhZ2V2aWV3cycsICdkaXNwbGF5X3RpbWUnXTsKICAgICAgICB2YXIgbGlzdCA9IF90aGlzMi5saXN0OwogICAgICAgIHZhciBkYXRhID0gX3RoaXMyLmZvcm1hdEpzb24oZmlsdGVyVmFsLCBsaXN0KTsKICAgICAgICBleGNlbC5leHBvcnRfanNvbl90b19leGNlbCh7CiAgICAgICAgICBoZWFkZXI6IHRIZWFkZXIsCiAgICAgICAgICBkYXRhOiBkYXRhLAogICAgICAgICAgZmlsZW5hbWU6IF90aGlzMi5maWxlbmFtZSwKICAgICAgICAgIGF1dG9XaWR0aDogX3RoaXMyLmF1dG9XaWR0aCwKICAgICAgICAgIGJvb2tUeXBlOiBfdGhpczIuYm9va1R5cGUKICAgICAgICB9KTsKICAgICAgICBfdGhpczIuZG93bmxvYWRMb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIGZvcm1hdEpzb246IGZ1bmN0aW9uIGZvcm1hdEpzb24oZmlsdGVyVmFsLCBqc29uRGF0YSkgewogICAgICByZXR1cm4ganNvbkRhdGEubWFwKGZ1bmN0aW9uICh2KSB7CiAgICAgICAgcmV0dXJuIGZpbHRlclZhbC5tYXAoZnVuY3Rpb24gKGopIHsKICAgICAgICAgIGlmIChqID09PSAndGltZXN0YW1wJykgewogICAgICAgICAgICByZXR1cm4gcGFyc2VUaW1lKHZbal0pOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuIHZbal07CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IAAAC;IAAAC;IAAAC;EAAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;EACA;EACAC;IACAC;MAAA;MACA;MACAC;QACA;QACA;MACA;IACA;IACAC;MAAA;MACA;MACA;QAAA;MAAA;QACA;QACA;QACA;QACA;QACAC;UACAC;UACAb;UACAI;UACAC;UACAC;QACA;QACA;MACA;IACA;IACAQ;MACA;QAAA;UACA;YACA;UACA;YACA;UACA;QACA;MAAA;IACA;EACA;AACA","names":["name","components","FilenameOption","AutoWidthOption","BookTypeOption","data","list","listLoading","downloadLoading","filename","autoWidth","bookType","created","methods","fetchData","fetchList","handleDownload","excel","header","formatJson"],"sourceRoot":"src/views/excel","sources":["export-excel.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n\n    <div>\n      <FilenameOption v-model=\"filename\" />\n      <AutoWidthOption v-model=\"autoWidth\" />\n      <BookTypeOption v-model=\"bookType\" />\n      <el-button :loading=\"downloadLoading\" style=\"margin:0 0 20px 20px;\" type=\"primary\" icon=\"el-icon-document\" @click=\"handleDownload\">\n        Export Excel\n      </el-button>\n      <a href=\"https://panjiachen.github.io/vue-element-admin-site/feature/component/excel.html\" target=\"_blank\" style=\"margin-left:15px;\">\n        <el-tag type=\"info\">Documentation</el-tag>\n      </a>\n    </div>\n\n    <el-table v-loading=\"listLoading\" :data=\"list\" element-loading-text=\"Loading...\" border fit highlight-current-row>\n      <el-table-column align=\"center\" label=\"Id\" width=\"95\">\n        <template slot-scope=\"scope\">\n          {{ scope.$index }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Title\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.title }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Author\" width=\"110\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <el-tag>{{ scope.row.author }}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Readings\" width=\"115\" align=\"center\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.pageviews }}\n        </template>\n      </el-table-column>\n      <el-table-column align=\"center\" label=\"Date\" width=\"220\">\n        <template slot-scope=\"scope\">\n          <i class=\"el-icon-time\" />\n          <span>{{ scope.row.timestamp | parseTime('{y}-{m}-{d} {h}:{i}') }}</span>\n        </template>\n      </el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<script>\nimport { fetchList } from '@/api/article'\nimport { parseTime } from '@/utils'\n// options components\nimport FilenameOption from './components/FilenameOption'\nimport AutoWidthOption from './components/AutoWidthOption'\nimport BookTypeOption from './components/BookTypeOption'\n\nexport default {\n  name: 'ExportExcel',\n  components: { FilenameOption, AutoWidthOption, BookTypeOption },\n  data() {\n    return {\n      list: null,\n      listLoading: true,\n      downloadLoading: false,\n      filename: '',\n      autoWidth: true,\n      bookType: 'xlsx'\n    }\n  },\n  created() {\n    this.fetchData()\n  },\n  methods: {\n    fetchData() {\n      this.listLoading = true\n      fetchList().then(response => {\n        this.list = response.data.items\n        this.listLoading = false\n      })\n    },\n    handleDownload() {\n      this.downloadLoading = true\n      import('@/vendor/Export2Excel').then(excel => {\n        const tHeader = ['Id', 'Title', 'Author', 'Readings', 'Date']\n        const filterVal = ['id', 'title', 'author', 'pageviews', 'display_time']\n        const list = this.list\n        const data = this.formatJson(filterVal, list)\n        excel.export_json_to_excel({\n          header: tHeader,\n          data,\n          filename: this.filename,\n          autoWidth: this.autoWidth,\n          bookType: this.bookType\n        })\n        this.downloadLoading = false\n      })\n    },\n    formatJson(filterVal, jsonData) {\n      return jsonData.map(v => filterVal.map(j => {\n        if (j === 'timestamp') {\n          return parseTime(v[j])\n        } else {\n          return v[j]\n        }\n      }))\n    }\n  }\n}\n</script>\n\n<style>\n.radio-label {\n  font-size: 14px;\n  color: #606266;\n  line-height: 40px;\n  padding: 0 12px 0 30px;\n}\n</style>\n"]}]}