{"remainingRequest":"/opt/homebrew/var/www/qiubb/public/shop/node_modules/babel-loader/lib/index.js!/opt/homebrew/var/www/qiubb/public/shop/node_modules/cache-loader/dist/cjs.js??ref--0-0!/opt/homebrew/var/www/qiubb/public/shop/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/homebrew/var/www/qiubb/public/shop/src/components/JsonEditor/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/opt/homebrew/var/www/qiubb/public/shop/src/components/JsonEditor/index.vue","mtime":1675670440394},{"path":"/opt/homebrew/var/www/qiubb/public/shop/babel.config.js","mtime":1675670440385},{"path":"/opt/homebrew/var/www/qiubb/public/shop/node_modules/cache-loader/dist/cjs.js","mtime":1675670541337},{"path":"/opt/homebrew/var/www/qiubb/public/shop/node_modules/babel-loader/lib/index.js","mtime":1675670543334},{"path":"/opt/homebrew/var/www/qiubb/public/shop/node_modules/cache-loader/dist/cjs.js","mtime":1675670541337},{"path":"/opt/homebrew/var/www/qiubb/public/shop/node_modules/vue-loader/lib/index.js","mtime":1675670542371}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiOwovLwovLwovLwovLwovLwovLwoKaW1wb3J0IENvZGVNaXJyb3IgZnJvbSAnY29kZW1pcnJvcic7CmltcG9ydCAnY29kZW1pcnJvci9hZGRvbi9saW50L2xpbnQuY3NzJzsKaW1wb3J0ICdjb2RlbWlycm9yL2xpYi9jb2RlbWlycm9yLmNzcyc7CmltcG9ydCAnY29kZW1pcnJvci90aGVtZS9ydWJ5Ymx1ZS5jc3MnOwpyZXF1aXJlKCdzY3JpcHQtbG9hZGVyIWpzb25saW50Jyk7CmltcG9ydCAnY29kZW1pcnJvci9tb2RlL2phdmFzY3JpcHQvamF2YXNjcmlwdCc7CmltcG9ydCAnY29kZW1pcnJvci9hZGRvbi9saW50L2xpbnQnOwppbXBvcnQgJ2NvZGVtaXJyb3IvYWRkb24vbGludC9qc29uLWxpbnQnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0pzb25FZGl0b3InLAogIC8qIGVzbGludC1kaXNhYmxlIHZ1ZS9yZXF1aXJlLXByb3AtdHlwZXMgKi8KICBwcm9wczogWyd2YWx1ZSddLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBqc29uRWRpdG9yOiBmYWxzZQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICB2YWx1ZTogZnVuY3Rpb24gdmFsdWUoX3ZhbHVlKSB7CiAgICAgIHZhciBlZGl0b3JWYWx1ZSA9IHRoaXMuanNvbkVkaXRvci5nZXRWYWx1ZSgpOwogICAgICBpZiAoX3ZhbHVlICE9PSBlZGl0b3JWYWx1ZSkgewogICAgICAgIHRoaXMuanNvbkVkaXRvci5zZXRWYWx1ZShKU09OLnN0cmluZ2lmeSh0aGlzLnZhbHVlLCBudWxsLCAyKSk7CiAgICAgIH0KICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwogICAgdGhpcy5qc29uRWRpdG9yID0gQ29kZU1pcnJvci5mcm9tVGV4dEFyZWEodGhpcy4kcmVmcy50ZXh0YXJlYSwgewogICAgICBsaW5lTnVtYmVyczogdHJ1ZSwKICAgICAgbW9kZTogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICBndXR0ZXJzOiBbJ0NvZGVNaXJyb3ItbGludC1tYXJrZXJzJ10sCiAgICAgIHRoZW1lOiAncnVieWJsdWUnLAogICAgICBsaW50OiB0cnVlCiAgICB9KTsKICAgIHRoaXMuanNvbkVkaXRvci5zZXRWYWx1ZShKU09OLnN0cmluZ2lmeSh0aGlzLnZhbHVlLCBudWxsLCAyKSk7CiAgICB0aGlzLmpzb25FZGl0b3Iub24oJ2NoYW5nZScsIGZ1bmN0aW9uIChjbSkgewogICAgICBfdGhpcy4kZW1pdCgnY2hhbmdlZCcsIGNtLmdldFZhbHVlKCkpOwogICAgICBfdGhpcy4kZW1pdCgnaW5wdXQnLCBjbS5nZXRWYWx1ZSgpKTsKICAgIH0pOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0VmFsdWU6IGZ1bmN0aW9uIGdldFZhbHVlKCkgewogICAgICByZXR1cm4gdGhpcy5qc29uRWRpdG9yLmdldFZhbHVlKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"mappings":";;;;;;;;AAOA;AACA;AACA;AACA;AACAA;AACA;AACA;AACA;AAEA;EACAC;EACA;EACAC;EACAC;IACA;MACAC;IACA;EACA;EACAC;IACAC;MACA;MACA;QACA;MACA;IACA;EACA;EACAC;IAAA;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;IAEA;IACA;MACA;MACA;IACA;EACA;EACAC;IACAC;MACA;IACA;EACA;AACA","names":["require","name","props","data","jsonEditor","watch","value","mounted","lineNumbers","mode","gutters","theme","lint","methods","getValue"],"sourceRoot":"src/components/JsonEditor","sources":["index.vue"],"sourcesContent":["<template>\n  <div class=\"json-editor\">\n    <textarea ref=\"textarea\" />\n  </div>\n</template>\n\n<script>\nimport CodeMirror from 'codemirror'\nimport 'codemirror/addon/lint/lint.css'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/rubyblue.css'\nrequire('script-loader!jsonlint')\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/addon/lint/lint'\nimport 'codemirror/addon/lint/json-lint'\n\nexport default {\n  name: 'JsonEditor',\n  /* eslint-disable vue/require-prop-types */\n  props: ['value'],\n  data() {\n    return {\n      jsonEditor: false\n    }\n  },\n  watch: {\n    value(value) {\n      const editorValue = this.jsonEditor.getValue()\n      if (value !== editorValue) {\n        this.jsonEditor.setValue(JSON.stringify(this.value, null, 2))\n      }\n    }\n  },\n  mounted() {\n    this.jsonEditor = CodeMirror.fromTextArea(this.$refs.textarea, {\n      lineNumbers: true,\n      mode: 'application/json',\n      gutters: ['CodeMirror-lint-markers'],\n      theme: 'rubyblue',\n      lint: true\n    })\n\n    this.jsonEditor.setValue(JSON.stringify(this.value, null, 2))\n    this.jsonEditor.on('change', cm => {\n      this.$emit('changed', cm.getValue())\n      this.$emit('input', cm.getValue())\n    })\n  },\n  methods: {\n    getValue() {\n      return this.jsonEditor.getValue()\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.json-editor {\n  height: 100%;\n  position: relative;\n\n  ::v-deep {\n    .CodeMirror {\n      height: auto;\n      min-height: 300px;\n    }\n\n    .CodeMirror-scroll {\n      min-height: 300px;\n    }\n\n    .cm-s-rubyblue span.cm-string {\n      color: #F08047;\n    }\n  }\n}\n</style>\n"]}]}